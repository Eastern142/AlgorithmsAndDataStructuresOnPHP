<?php
/* Попробовал раскидать приведенные примеры по дополнительным материалам и лекции */
$n = 100; /* Не учитывал */
$array[] = []; /* Не учитывал */

for ($i = 0; $i < $n; $i++) { /* При первой итерации сложность будет равна O(2), и так как далее количество операций
возрастает до O(3N) на каждую итерацию, отбросим множитель и примем сложность равную O(N) согласно анализу наиболее
неблагоприятного случая */
    for ($j = 1; $j < $n; $j *= 2) { /* В этом цикле сложность так же будет равна O(N) */
        $array[$i][$j] = true;
        /* 1*2=1
           2*2=4
           4*2=8
           8*2=16
           16*2=32
           32*2=64
           64*2=128 > 100 = false */
        /* var_dump($array[$i][$j] = $i); */ /* O(1) */
    }
}
/* Итого: O(N * N) = O(n^2);
На каждую итерацию внешнего цикла получим 7 итераций внутреннего и в итоге получаем 700 итераций */

$n = 100; /* Не учитывал */
$array[] = []; /* Не учитывал */

for ($i = 0; $i < $n; $i += 2) {
    for ($j = $i; $j < $n; $j++) {
        echo($array[$i] = $i); /* O(1) */
    }
}
/* Итого: так как то же имеем два вложенных цикла, сложность уже будет равна O(N^2)
По первому циклу у меня получилось 50 итераций, так как увеличиваем всегда на 2 т.е. 100/2 = 50, дальше с подсчетом я увы
совсем запутался, но, могу сказать что второй цикл будет начинаться с 0 затем 2,4,6 и так до 98 так как 100 не меньше 100 */